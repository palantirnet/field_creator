<?php

/**
 * @file
 * Tests of field_creator CSV functions.
 *
 * @copyright (C) Copyright 2013 Palantir.net, Inc.
 */


include_once 'field_creator.install';
require 'vendor/autoload.php';

/**
 * Unit tests for csv functions.
 *
 * @todo, these functions might belong in there own class totally independent
 * of Drupal. These tests could then be done through PHPUnit.
 */
class FieldCreatorCsvUnitTests extends PHPUnit_Framework_TestCase  {


  /**
   * Basic test information.
   */
  static public function getInfo() {
    return array(
      'name' => 'Field Creator CSV unit tests',
      'description' => 'Unit tests for CSV functions.',
      'group' => 'Field Creator',
    );
  }

  /**
   * Get a the file path of a test csv file.
   */
  protected function getCsvFilePath($name) {
    // @todo, eventually there may need to be a more robust way of going from
    // a name variable to a full path.
    return  'test_csv/' . $name . '.csv';
  }

  /**
   * Unit test of field_creator_csvToArray().
   */
  public function testUnitTestOfCsvToArray() {

    $foods_csv_path = $this->getCsvFilePath('foods');
    $csv_array = field_creator_csvToArray($foods_csv_path);

    // This is the array that should be returned from $csv_array
    $expected_cvs_array = $this->getExpectedFoodArray();
    $this->assertTRUE($expected_cvs_array === $csv_array, 'The csv array is identical to the expected array.');

    // Verify that a single change to a value makes the expected value and the
    // derived value un-identical.
    // First check that the last value in the last array is 'Chicken'
    $this->assertTRUE($csv_array[3][3] === 'Chicken', 'The last value in the last array matches the expected value.');
    $csv_array[3][3] = 'Chickan';
    $this->assertTRUE($expected_cvs_array !== $csv_array, 'Changing a value the csv array causes it to no longer be identical to the expected array.');
  }

  /**
   * Returns that an array that should be identical to the array from foods.csv.
   *
   * This array should match the exact output of
   * $foods_csv_path = $this->getCsvFilePath('foods');
   * $csv_array = field_creator_csvToArray($foods_csv_path);
   *
   * This method is tested in testUnitTestOf_csvToArray(). This method can be
   * used in other tests in lieu of continually reading off the csv.
   */
  protected function getExpectedFoodArray() {
    return array(
      array(
        'Type',
        'Column A',
        'Column B',
        'Column C',
      ),
      array(
        'Fruit',
        'Apple',
        'Banana',
        'Clementine',
      ),
      array(
        'Vegetable',
        'Asparagus',
        'Basil',
        'Cabbage',
      ),
      array(
        'Meat',
        'Albacore',
        'Bison',
        'Chicken',
      ),
    );
  }
}
