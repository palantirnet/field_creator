<?php
/**
 * @file
 * Drupal needs this blank file.
 *
 * @copyright (C) Copyright 2013 Palantir.net, Inc.
 */


/**
 * Get an array that has categories as keys and country entries as values.
 */
function field_creator_getMappingFromCSV($path, $key_column = NULL, $desired_value_position = FALSE) {
  $csv_array = field_creator_csvToArray($path);
  return field_creator_csvArrayMappingGenerator($csv_array, $key_column, $desired_value_position);
}

/**
 * Transform an array from a csv to be keyed by one of it's columns.
 */
function field_creator_csvArrayMappingGenerator($csv_array, $source_value_position = 0, $desired_value_position = FALSE) {
  $mapping = array();
  $labels = array_shift($csv_array);

  foreach ($csv_array as $row) {
    if (!empty($row[$source_value_position])) {
      // @todo, should this be a separate param?
      if ($desired_value_position === FALSE) {

        for ($x = 0; $x < count($row); $x++) {
          // @todo, this code looks like it could be simplified.
          $key = strtolower($labels[$x]);
          $key = str_replace('#', 'num', $key);
          $key = str_replace('/', 'or', $key);
          $key = str_replace(' ', '_', $key);
          $value[$key] = $row[$x];

        }
      }
      else {
        // Some csv values have trailing whitespace, so they get trimmed.
        // @todo, are there any values for which trim() is not appropriate?
        $value = trim($row[$desired_value_position]);
      }

      $mapping[trim($row[$source_value_position])] = $value;
    }
  }
  return $mapping;
}

/**
 * Turns a csv file into an array.
 */
function field_creator_csvToArray($file_path) {

  $arrays = &drupal_static(__METHOD__);
  if (!isset($arrays[$file_path])) {
    if (($handle = fopen($file_path, "r")) !== FALSE) {
      while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        $arrays[$file_path][] = $data;
      }
      fclose($handle);
    }
  }

  return $arrays[$file_path];
}
